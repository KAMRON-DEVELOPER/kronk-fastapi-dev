services:
  agent:
    image: portainer/agent:lts
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    ports:
      - mode: host
        target: 9001
        published: 9001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - traefik-network
      - agent-network
    deploy:
      mode: global
      labels:
        - "traefik.enable=true"
        - "prometheus-job=edge"

        # Mandatory by swarm
        - "traefik.http.services.edge_service.loadbalancer.server.port=9001"

        # HTTP
        - "traefik.http.routers.edge_http.rule=Host(`edge.kronk.uz`)"
        - "traefik.http.routers.edge_http.entrypoints=http"
        - "traefik.http.routers.edge_http.middlewares=edge_middleware"

        # HTTPS
        - "traefik.http.routers.edge_https.rule=Host(`edge.kronk.uz`)"
        - "traefik.http.routers.edge_https.entrypoints=https"
        - "traefik.http.routers.edge_https.tls=true"
        - "traefik.http.routers.edge_https.tls.certresolver=leresolver"

        # Middleware
        - "traefik.http.middlewares.edge_middleware.redirectscheme.scheme=https"
        - "traefik.http.middlewares.edge_middleware.redirectscheme.permanent=true"
      placement:
        constraints: [ node.platform.os == linux ]

  portainer:
    image: portainer/portainer-ce:lts
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - mode: host
        target: 9000
        published: 9000
    volumes:
      - data:/data
    networks:
      - traefik-network
      - monitoring-network
      - agent-network
    deploy:
      labels:
        - "traefik.enable=true"
        - "prometheus-job=portainer"

        # Mandatory by swarm
        - "traefik.http.services.portainer_service.loadbalancer.server.port=9000"

        # HTTP
        - "traefik.http.routers.portainer_http.rule=Host(`portainer.kronk.uz`)"
        - "traefik.http.routers.portainer_http.entrypoints=http"
        - "traefik.http.routers.portainer_http.middlewares=portainer_middleware"

        # HTTPS
        - "traefik.http.routers.portainer_https.rule=Host(`portainer.kronk.uz`)"
        - "traefik.http.routers.portainer_https.entrypoints=https"
        - "traefik.http.routers.portainer_https.tls=true"
        - "traefik.http.routers.portainer_https.tls.certresolver=leresolver"

        # Middleware
        - "traefik.http.middlewares.portainer_middleware.redirectscheme.scheme=https"
        - "traefik.http.middlewares.portainer_middleware.redirectscheme.permanent=true"
      mode: replicated
      replicas: 1
      placement:
        constraints: [ node.role == manager ]
      resources:
        limits:
          cpus: "1"
          memory: 1G

networks:
  traefik-network:
    external: true
    driver: overlay
  monitoring-network:
    external: true
    driver: overlay
  agent-network:
    external: true
    driver: overlay

volumes:
  data:

